#!/bin/python3

import subprocess
import queue
import threading

# Prompting utilities:
def bold(text):
    return "\033[1m" + text + "\033[0m"

def red(text):
    return "\033[31m" + text + "\033[0m"

def blue(text):
    return "\033[34m" + text + "\033[0m"

def validate_input(inp, choices):
    valid = inp in choices
    if not valid:
        print(red("!") + " Invalid input.", inp, "not in ", choices)   
    return valid

def prompt(msg, choices):
    while True:
        response = input(blue("?") + " " + msg + " [" + ", ".join(choices) + "]: ")
        if validate_input(response, choices):
            return response

def listen(out, q):
    for line in out:
        q.put(line)

    out.close()

# Tweaks:
def set_timezone():
    choices = ["y", "n"]
    msg = "Change timezone"       
    response = prompt(msg, choices)
    if response == "y":
        tzprocess = subprocess.Popen("tzselect",
                                     stdin=subprocess.PIPE,
                                     stdout=subprocess.PIPE,
                                     stderr=subprocess.STDOUT,
                                     bufsize=1,
                                     universal_newlines = True)
        q = queue.Queue()
        t = threading.Thread(target=listen, args=(tzprocess.stdout, q))
        t.daemon = True
        t.start()
        menu_option = 0
        while tzprocess.returncode == None:
            try:
                if menu_option < 3:
                    while True:
                        line = q.get(timeout=0.1)  
                        print(line[:-1])
                elif menu_option == 3:
                        line = q.get(timeout=0.1)
                elif menu_option == 4:
                    choice = q.get(timeout=0.1).strip()[3:]
                    print("Setting timezone: " + choice)
                    subprocess.run(["timedatectl", "set-timezone", choice, "--no-ask-password"])
                    break

            except queue.Empty:
                if menu_option < 3:
                    selection = input(blue("? "))
                    tzprocess.stdin.write(selection + "\n")
                    tzprocess.stdin.flush()
                elif menu_option == 3:
                    tzprocess.stdin.write("1\n")
                    tzprocess.stdin.flush()

                menu_option += 1

            tzprocess.poll()
        tzprocess.kill()

def enable_performance_overlay():
    choices = ["y", "n"]
    msg = "Enable performance overlay (MangoHud)"       
    response = prompt(msg, choices)
    if response == "y":
        subprocess.run("mangohudctl set no_display 0")
    else:
        subprocess.run("mangohudctl set no_display 1")

if __name__ == "__main__":
    set_timezone()
    enable_performance_overlay()
   