#!/bin/python3

import subprocess
import queue
import threading
import sys
import re

# Prompting utilities:
def red(text):
    return "\033[31m" + text + "\033[0m"

def blue(text):
    return "\033[34m" + text + "\033[0m"

def listen(out, q):
    for line in out:
        q.put(line)

    out.close()

# Commands:
def help():
    print()
    print("Usage: tweaktron [command]\n")
    print("    help                  displays this help menu")
    print("    set-timezone          utility for setting the timezone")
    print("    toggle-perf-overlay   toggles the performance overlay (MangoHud)")
    print()

def set_timezone():
    tzprocess = subprocess.Popen("tzselect",
                                    stdin=subprocess.PIPE,
                                    stdout=subprocess.PIPE,
                                    stderr=subprocess.STDOUT,
                                    bufsize=1,
                                    universal_newlines = True)
    q = queue.Queue()
    t = threading.Thread(target=listen, args=(tzprocess.stdout, q))
    t.daemon = True
    t.start()

    # Listen for prompts while timedatectl is running
    while tzprocess.returncode == None:
        # Parse the prompt from timedatectl
        output = ""
        while True:
            try:
                line = q.get(timeout=0.2)  
                output += line
            except:
                break

        # Intercept the confirmation prompt
        if "Is the above information OK?" in output:
            # Auto confirm
            tzprocess.stdin.write("1\n")
            tzprocess.stdin.flush()
            
            # Parse the timezone
            choice = re.search("TZ='.+'", output)
            choice = choice.group(0)[4:-1]

            # Set the timezone
            print("Setting timezone to " + choice + "...")
            subprocess.run("timedatectl set-timezone " + choice, shell=True, stderr=subprocess.STDOUT)
            print("Done.")
            print()
            print("Reboot your device for the changes to take effect.")

            break

        print(output)

        selection = input(blue("? "))
        tzprocess.stdin.write(selection + "\n")
        tzprocess.stdin.flush()

        tzprocess.poll()
    tzprocess.kill()

def toggle_performance_overlay():
    try:
        print("Toggling performance overlay...")
        subprocess.run("mangohudctl toggle no_display", shell=True)
        print("Done.")
    except:
        print(red("!"), "Unable to toggle performance overlay.")

if __name__ == "__main__":
    try: 
        command = sys.argv[1]
        if command == "help":
            help()
        elif command == "set-timezone":
            set_timezone()
        elif command == "toggle-perf-overlay":
            toggle_performance_overlay()
        else:
            print(red("!"), "Invalid command:", command)
            print("Run \"tweaktron help\" for available commands.")
    except IndexError as e:
        help()
    except Exception as e:
        print(e)